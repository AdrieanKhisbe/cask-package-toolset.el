* Cask Package Toolset

[[https://travis-ci.org/AdrieanKhisbe/cask-package-toolset.el][file:https://travis-ci.org/AdrieanKhisbe/cask-package-toolset.el.svg]]

/Continuous integration for EmacsLisp without pain!/

** About

This is an /in building project/ to help you start or tool up your emacs package project
in order to improve it's quality by helping you to launch test and protect you from regressions.

This is inspired from the [[http://rejeep.github.io/emacs/cask/ert/ert-runner/ert-async/ecukes/testing/travis/2014/01/09/various-testing-tools-in-emacs.html][following blog post]] of [[https://github.com/rejeep/][@Rejeep]] who had brought to us [[https://github.com/cask/cask][Cask]],
[[https://github.com/rejeep/ert-runner.el][Ert-runner]] and [[https://github.com/rejeep/evm][Emacs Version Management]].

** Installation

Just add this has dependency to your =Cask= file

: (depends-on "cask-package-toolset")

** Usage
+ View usage information:
  : $ cask exec package-toolset help
+ Install all the tools
  : $ cask exec package-toolset install
+ Print the melpa recipe for your repositery
  : $ cask exec package-toolset melpa-recipe

# TODO: add command to ensure test/ecukes.

*** Options
+ in case your =origin= remote is not targeting your github repositery, you can specify it with the =-r <remote>= or =--remote <remote>= option


** Skeleton File List

Here is the list of the scaffold file to set up continuous integration for your emacs package.

Here is the set of file to set this up.
+ [[file:templates/Makefile][Makefile]] : The =Makefile=, and it's =test= targets
+ [[file:templates/.gitignore][.gitgnore]] : A classic =gitignore= designed for a /casked/ emacs package
+ [[file:templates/.travis.yml][.travis.yml]] : The build configuration file for Travis.

** Notes

This is still a prototype. If POC is working, happen to be usefull, (/will personnaly use it to "toolsettize" personnage package I built but not yet made public/)
I will see with the =Cask= team to incorporate it to make it helpful to the comunity, and help promote use of integration and tests.

*If you have any remark, refactor suggestion or else, just pose an issue ;)*
